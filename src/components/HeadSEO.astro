---
import { SITE, OPEN_GRAPH, type Frontmatter } from '../config'

export interface Props {
	frontmatter: Frontmatter
	canonicalUrl: URL
}

const { frontmatter, canonicalUrl } = Astro.props as Props
const formattedContentTitle = `${frontmatter.title} üë®‚Äçüíª ${SITE.title}`
const imageAlt = frontmatter.image?.alt ?? OPEN_GRAPH.image.alt

const META_IMG_URL =
	Astro.url.origin + (frontmatter.image?.src ?? '/metaimage.png')

const DESCRIPTION = frontmatter.description ?? SITE.description
---

<!-- Page Metadata -->
<link rel='canonical' href={canonicalUrl} />

<!-- OpenGraph Tags -->
<meta property='og:title' content={formattedContentTitle} />
<meta property='og:type' content='article' />
<meta property='og:url' content={canonicalUrl} />
<meta
	property='og:locale'
	content={frontmatter.ogLocale ?? SITE.defaultLanguage}
/>
<meta property='og:image:alt' content={imageAlt} />
<meta name='description' property='og:description' content={DESCRIPTION} />
<meta property='og:site_name' content={SITE.title} />

<!-- Twitter Tags -->
<meta name='twitter:card' content='summary_large_image' />
<meta name='twitter:site' content={OPEN_GRAPH.twitter} />
<meta name='twitter:title' content={formattedContentTitle} />
<meta name='twitter:description' content={DESCRIPTION} />

<meta name='twitter:image:alt' content={imageAlt} />

<meta property='og:image' content={META_IMG_URL} />
<meta property='twitter:image' content={META_IMG_URL} />

<!--
  TODO: Add json+ld data, maybe https://schema.org/APIReference makes sense?
  Docs: https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data
  https://www.npmjs.com/package/schema-dts seems like a great resource for implementing this.
  Even better, there's a React component that integrates with `schema-dts`: https://github.com/google/react-schemaorg
-->
