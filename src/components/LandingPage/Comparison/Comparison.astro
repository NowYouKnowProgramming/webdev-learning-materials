---
import ComparisonCard, {
	Props as ComparisonCardProps,
} from './ComparisonCard.astro'

const comparisonData: ComparisonCardProps[] = [
	{
		name: 'Bootcamp',
		downside: 'Expensive',
		icon: 'ðŸ’¸',
	},
	{
		name: 'Freecodecamp',
		downside: 'Time consuming',
		icon: 'âŒ›',
	},
	{
		name: 'Bewebdev.tech',
		downside: 'Great for everyone!',
		icon: 'ðŸ¤©',
	},
]
---

<style lang='scss' is:global>
	.hidden-list li {
		opacity: 0;
		transform: translate3d(0, 20px, 0);
	}

	li.side-by-side {
		@for $i from 1 through 10 {
			&:nth-child(#{$i}) {
				transition: opacity 1s ease-out, transform 1s ease-out;
				transition-delay: 0.2s * $i;
			}
		}
	}
</style>

<script>
	// remove the hidden-list class from the list if visible
	const list = document.querySelector('.comparison-list')

	const observer = new IntersectionObserver(
		(entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					entry.target.classList.remove('hidden-list')
				}
			})
		},
		{
			root: null,
			rootMargin: '-15px',
			threshold: 0.5,
		}
	)

	observer.observe(list)
</script>

<div class='main-container'>
	<h2 class='sr-only'>Compare bewebdev.tech to other services</h2>
	<ul class='comparison-list hidden-list'>
		{
			comparisonData.map((data) => (
				<ComparisonCard
					downside={data.downside}
					icon={data.icon}
					name={data.name}
				/>
			))
		}
	</ul>
</div>

<style>
	.main-container {
		max-width: 1200px;
		width: min(90vw, 100%);
		margin: 9rem auto;
		margin-top: 13rem;
		position: relative;
		z-index: var(--z-floating-base);
	}

	ul {
		list-style: none;
		padding: 0;
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(325px, 1fr));
		grid-auto-rows: 1fr;
		grid-gap: 3rem;
	}
</style>
