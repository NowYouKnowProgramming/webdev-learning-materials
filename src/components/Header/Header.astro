---
import * as CONFIG from '../../config'
import ThemeToggle from '../RightSidebar/ThemeToggleButton'
import AstroLogo from './AstroLogo.astro'
import Search from './Search'
import SidebarToggle from './SidebarToggle'
import SkipToContent from './SkipToContent.astro'
import DonationModal from '../DonationModal/DonationModal'

type Props = {
	currentPage: string
}

const { currentPage } = Astro.props as Props

const currentPageIsRoot = currentPage === '/'

const { ALGOLIA } = CONFIG
const { apiKey, appId, indexName } = ALGOLIA

const algoliaIsSetUp = indexName && appId && apiKey
---

<script>
	window.addEventListener('scroll', () => {
		const header = document.querySelector('#main-header-top')
		if (window.scrollY > 0 && header) {
			header.classList.add('bg-theme-base/50')
		} else if (header) {
			header.classList.remove('bg-theme-base/50')
		}
	})
</script>

<header
	id='main-header-top'
	class='z-[4000] py-8 w-full flex items-center justify-center overflow-hidden fixed top-0 backdrop-blur transition-colors'
>
	<SkipToContent />
	<nav
		class='w-full fixed flex items-center justify-end gap-1 px-6'
		title='Top Navigation'
	>
		{
			!currentPageIsRoot && (
				<div class='menu-toggle'>
					<SidebarToggle client:idle />
				</div>
			)
		}
		<div class='flex-grow flex'>
			<a class='flex gap-3 items-center font-serious' href='/'>
				<AstroLogo size={40} />
				<div class='font-extrabold text-lg text-theme-base'>
					{
						currentPageIsRoot && (
							<h1 class='title-main'>{CONFIG.SITE.title ?? 'Documentation'}</h1>
						)
					}
					{
						!currentPageIsRoot && (
							<p class='title-main'>{CONFIG.SITE.title ?? 'Documentation'}</p>
						)
					}
				</div>
			</a>
		</div>
		{
			algoliaIsSetUp && (
				<div class='search-item'>
					<Search client:idle />
				</div>
			)
		}
		<ThemeToggle client:visible />
	</nav>
</header>
<DonationModal client:only='react' />

<style>
	.menu-toggle {
		scale: 1.8;
	}

	@media (min-width: 50em) {
		header {
			padding: 2rem 0rem;
		}

		.menu-toggle {
			display: none;
		}
	}

	.search-item {
		display: none;
		position: relative;
		z-index: var(--z-elevated-higher);
		flex-grow: 1;
		padding-right: 0.7rem;
		display: flex;
		max-width: 200px;
	}

	@media (min-width: 50em) {
		.search-item {
			max-width: 400px;
		}
	}
</style>

<style is:global>
	.search-item > * {
		flex-grow: 1;
	}
</style>
