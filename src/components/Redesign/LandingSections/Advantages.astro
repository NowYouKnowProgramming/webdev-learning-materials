---
import type { ComparisonCardProps } from '../ComparisonCard.astro'
import ComparisonCard from '../ComparisonCard.astro'
import LandingSection from '../LandingSection.astro'
const comparisonCardData: ComparisonCardProps[] = [
	{
		icon: '/icons/hourglass.svg',
		title: 'Save time',
		text: 'We have done the hard work for you. No need to search for resources.',
	},
	{
		icon: '/icons/savings.svg',
		title: 'Free',
		text: 'Our platform is free to use. No hidden fees or subscriptions.',
	},
	{
		icon: '/icons/school_hat.svg',
		title: 'Proven resources',
		text: 'We only list resources that have been helpful to other developers. No filler content.',
	},
]
---

<LandingSection className='pb-28 border-b-2 border-basetext/10 mb-20 relative'>
	<h2 class='text-3xl font-medium mb-5'>Advantages of using our platform</h2>
	<ul class='flex gap-4 lg:gap-8 xl:gap-14 flex-wrap'>
		{comparisonCardData.map((card) => <ComparisonCard {...card} />)}
	</ul>
	<div
		class='bg-theme-accent-secondary w-96 h-64 rounded-full absolute left-1/2 bottom-0 blur-3xl opacity-10 select-none pointer-events-none -translate-x-1/2'
	>
	</div>
	<div
		class='bg-theme-accent-primary w-64 h-64 rounded-full absolute left-0 top-1/2 blur-3xl opacity-5 select-none pointer-events-none -translate-x-1/2 -translate-y-1/2'
	>
	</div>
</LandingSection>

<script>
	const MAX_DEGREE_TILT = 2

	const tiltHandler = (event: MouseEvent) => {
		const container = event.currentTarget as HTMLElement

		const specular = container.querySelector('#specular') as HTMLElement

		const specularWidth = specular.offsetWidth
		const specularHeight = specular.offsetHeight

		specular.style.transform = `translateX(${
			event.offsetX - specularWidth / 2
		}px) translateY(${event.offsetY - specularHeight / 2}px)`

		const containerWidth = container.offsetWidth
		const containerHeight = container.offsetHeight

		const xProgress = (
			-MAX_DEGREE_TILT *
			(event.offsetX / containerWidth - 0.5) *
			2
		).toFixed(2)

		const yProgress = (
			MAX_DEGREE_TILT *
			(event.offsetY / containerHeight - 0.5) *
			2
		).toFixed(2)

		container.style.transform = `perspective(300px) rotateX(${yProgress}deg) rotateY(${xProgress}deg)`
	}

	const leaveHandler = (event: MouseEvent) => {
		const container = event.currentTarget as HTMLElement
		container.style.transform = `rotateX(0deg) rotateY(0deg)`
	}

	const cards = document.querySelectorAll<HTMLDivElement>(`#card-advantage`)
	cards.forEach((card) => {
		const isReduced = window.matchMedia(
			`(prefers-reduced-motion: reduce)`
		).matches

		if (isReduced) return

		card.addEventListener('mousemove', tiltHandler)
		card.addEventListener('mouseleave', leaveHandler)
	})
</script>
