---
import type { MarkdownHeading } from 'astro'
import Footer from '../components/Footer/Footer.astro'
import HeadCommon from '../components/HeadCommon.astro'
import Header from '../components/Header/Header.astro'
import HeadSEO from '../components/HeadSEO.astro'
import LeftSidebar from '../components/LeftSidebar/LeftSidebar.astro'
import PageContent from '../components/PageContent/PageContent.astro'
import RightSidebar from '../components/RightSidebar/RightSidebar.astro'
import CopyCodeToClipboard from '../components/utility/CopyCodeToClipboard/CopyCodeToClipboard.astro'

import * as CONFIG from '../config'

type Props = {
	frontmatter: CONFIG.Frontmatter
	headings: MarkdownHeading[]
}

const { frontmatter, headings } = Astro.props as Props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const currentPage = Astro.url.pathname
const currentFile = `src/pages${currentPage.replace(/\/$/, '')}.md`
const githubEditUrl = `${CONFIG.GITHUB_EDIT_URL}/${currentFile}`
---

<html
	dir={frontmatter.dir ?? 'ltr'}
	lang={frontmatter.lang ?? 'en'}
	class='initial'
>
	<head>
		<HeadCommon />
		<HeadSEO frontmatter={frontmatter} canonicalUrl={canonicalURL} />
		<title>
			{
				frontmatter.title
					? `${frontmatter.title} - ${CONFIG.SITE.title}`
					: CONFIG.SITE.title
			}
		</title>
		<style lang='scss'>
			body {
				width: 100%;
				display: grid;
				grid-template-rows: var(--theme-navbar-height) 1fr;
				--gutter: 0.5rem;
				--doc-padding: 2rem;
			}

			.layout {
				display: grid;
				grid-auto-flow: column;
				grid-template-columns:
					minmax(var(--gutter), 1fr) minmax(0, var(--max-width))
					minmax(var(--gutter), 1fr);
				overflow-x: hidden;
			}

			.grid-sidebar {
				height: 100vh;
				position: sticky;
				top: 0;
				padding: 0;
			}

			#grid-left {
				position: fixed;
				background-color: var(--theme-bg);
				z-index: var(--z-elevated-higher);
				display: none;
			}

			#grid-main {
				padding: var(--doc-padding) var(--gutter);
				grid-column: 2;
				display: flex;
				flex-direction: column;
				height: 100%;
			}

			#grid-right {
				display: none;
			}

			@media (min-width: 50em) {
				.layout {
					overflow: initial;
					grid-template-columns: 20rem minmax(0, var(--max-width));
					gap: 1em;
				}

				#grid-left {
					display: flex;
					padding-left: 2rem;
					position: sticky;
					grid-column: 1;
				}
			}

			@media (min-width: 72em) {
				.layout {
					grid-template-columns: 20rem minmax(0, var(--max-width)) 18rem;
					padding-left: 0;
					padding-right: 0;
					margin: 0 auto;
				}

				#grid-right {
					grid-column: 3;
					display: flex;
				}
			}
		</style>
		<style is:global lang='scss'>
			.layout > * {
				width: 100%;
				height: 100%;
			}

			.main-section {
				@keyframes fadeInDown {
					0% {
						opacity: 0;
						transform: translateY(-1.25em);
					}
					100% {
						opacity: 1;
						transform: translateY(0);
					}
				}
				details[open] {
					animation-name: fadeInDown;
					animation-duration: 0.5s;
				}
				details {
					summary {
						transition: 0.2s;
						padding: 10px;
						border-radius: 8px;

						user-select: none;
						&:hover {
							background-color: var(--theme-text-accent);
							color: var(--theme-bg);
							cursor: pointer;
						}
					}

					&[open] {
						summary {
							margin-bottom: 10px;
						}
					}
				}
				a:visited {
					color: var(--theme-text-accent-visited);
				}
				ul {
					list-style: none !important;
					padding: 0;
					li {
						li {
							padding-left: 0.5rem;
							margin-bottom: 0;
							&::before {
								content: '- ';
							}
						}
						a {
							text-decoration: none;
							padding: 5px 0;
							transition: 0.2s;
							&:hover {
								color: var(--theme-accent);
							}

							&::before {
								content: 'ðŸ”— ';
							}
						}
						margin-bottom: 1.6rem;
					}
				}
			}

			.mobile-sidebar-toggle {
				overflow: hidden;
			}

			.mobile-sidebar-toggle #grid-left {
				display: block;
				top: 2rem;
			}
		</style>
	</head>

	<body>
		<Header currentPage={currentPage} />
		<main class='layout'>
			<aside id='grid-left' class='grid-sidebar' title='Site Navigation'>
				<LeftSidebar currentPage={currentPage} />
			</aside>
			<div id='grid-main'>
				<PageContent
					frontmatter={frontmatter}
					headings={headings}
					githubEditUrl={githubEditUrl}
				>
					<slot />
				</PageContent>
			</div>
			<aside id='grid-right' class='grid-sidebar' title='Table of Contents'>
				<RightSidebar headings={headings} githubEditUrl={githubEditUrl} />
			</aside>
		</main>
		<Footer path={currentFile} />
		<CopyCodeToClipboard />
	</body>
</html>
